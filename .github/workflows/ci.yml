name: ci

on: [push, pull_request]

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.9' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python (${{ matrix.os }}, ${{ matrix.python-version }})
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements.txt
      - name: Check source code issues
        run: make check
  test:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10-dev', 'pypy-3.8', 'pypy-3.9']
        include:
          - os: macos-latest
            python-version: 3.9
          - os: windows-latest
            python-version: 3.9
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python (${{ matrix.os }}, ${{ matrix.python-version }})
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements.txt
      - name: Run tests
        run: make test
      - name: Post coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
  release:
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python (3.9)
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: 'pip'
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements.txt
      - name: Create release if new version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: python scripts/gh_release.py
